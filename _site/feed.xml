<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.2.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2019-01-14T22:40:58+07:00</updated><id>/</id><title type="html">Quynh Anh Hoang</title><subtitle>Personal website for self-promotion</subtitle><entry><title type="html">Do I care if I survive this</title><link href="/blog/Solanin/" rel="alternate" type="text/html" title="Do I care if I survive this" /><published>2019-01-14T00:00:00+07:00</published><updated>2019-01-14T00:00:00+07:00</updated><id>/blog/Solanin</id><content type="html" xml:base="/blog/Solanin/">&lt;p&gt;Mình vừa nghỉ việc được 2 tuần, sang hôm nay là tuần thứ ba rồi, cũng là tuần mình tròn 22 tuổi. Cũng không phải nghỉ hẳn, mình xin nghỉ với lý do là “tìm lại bản thân”, bao giờ thấy ổn mình sẽ quay lại. Giờ sao?&lt;/p&gt;

&lt;p&gt;Bản thân và giá trị của mình vẫn lạc lõng đâu đó trong những mảnh vỡ nát, mình còn lạc lối hơn. Vì mình không biết mình được định nghĩa như thế nào nữa. Mình là đứa như thế nào, là người như thế nào. Mình có phải là một đứa con gái tốt, một người trưởng thành tốt, một người tốt. Mình không biết. Một ngày của mình sau khi nghỉ việc vẫn là tỉnh dậy, nghĩ, tập đàn, nghe nhạc, đọc sách đọc truyện, lại hết một ngày. Bạn bè thì dĩ nhiên là vẫn đi làm, mình lại ngồi một mình ở đây.&lt;/p&gt;

&lt;p&gt;Hôm nay mình rơi vào một cái hố khá sâu, đau đấy. Mình tức giận với những thứ đang xảy ra xung quanh mình. Dù chẳng có chuyện gì xảy ra hết. Những cơn anxiety lại quay lại, không chút động lực, mệt mỏi, chronic depression, mình tìm sự an ủi trong những giấc ngủ dài. Như Trần Dần viết, “Nhưng nếu không có tôi, đời vẫn không sao, các nồi cơm vẫn chín và thơm phức, nội ngoại thành vẫn làm lụng, đi lại và ăn uống vui vẻ. Nếu không có tôi, thì buồn lắm, tôi sẽ kẹt lại trong trại giam nào, buồn như hạt gạo vỡ.”
Mình có buồn như hạt gạo vỡ không.&lt;/p&gt;

&lt;p&gt;Xong mình vẫn là đứa đu bám ăn mày tình thương từ người khác. Mình thích người này, mình yêu người kia, mình chán người nọ. Mấy tháng vừa rồi mình thích một chị. Mình cứ nghĩ mãi. Rồi mình nói ra. Xong dĩ nhiên là không có gì xảy ra cả, mình chỉ là một em gái cù bơ cù bất kém 10 tuổi lướt qua cuộc đời họ và rồi họ cũng sẽ quên mình sau mấy tháng nữa thôi. Cũng chỉ là một cái rebound crush. Và có lẽ việc thích chị ấy cho mình một mục đích gì đó, cho mình cảm giác gì đó, để mình được định nghĩa bản thân? Mình định nghĩa bản thân bằng cách cứ yêu đương nhăng nhít rồi xây dựng chồng chất những nhân dạng để người ta thích mình? Xong mình lại nghĩ, mình cũng thông minh một chút, hài hước theo kiểu méo mó một chút, biết điều này điều kia, là một đứa trẻ con đủ tốt, mình xứng đáng được nhiều thứ tốt hơn. Sao người ta lại đối xử với mình như vậy. Mình tức giận, rồi lại buồn. Rồi nỗi buồn lại đổ thêm vào những sự hoài nghi kéo dài suốt một năm vừa rồi làm mình chạm đáy. Chị Hoa chắc cũng không bao giờ đọc được những dòng này đâu, nhưng chẳng may nếu có đọc được thì tới lúc viết những từ này em vẫn thích chị lắm đấy và em hi vọng chị sớm tìm được thứ gì đó hay ai đó thích chị nhiều như cách chị đam mê với ma sói và sẽ nấu cơm cho chị khi chị về muộn vì lười nấu cơm. Thế thôi.&lt;/p&gt;

&lt;p&gt;Lẽ ra hôm nay mình phải đi làm rồi. Nhưng mình vẫn chưa sẵn sàng. Mình không có động lực hay đam mê gì cả. Mấy ngày trôi qua như một cái vỏ rỗng tuếch. Mọi người xung quanh tiến lên, mình cứ hủi hủi thế này. Và việc viết ra hay kêu gào than vãn cũng không giải quyết được gì cả, mình biết. Nếu mọi thứ có khá hơn, mình muốn nhớ lại những lúc như này. Còn nếu mọi chuyện tệ hơn, mình mong có ai đó đọc được. Ai đó đọc được và biết mình từng tồn tại thế này.&lt;/p&gt;

&lt;p&gt;Mình đọc lại Solanin lần thứ n. Vẫn câu chuyện Meiko chán ngán thế giới người lớn và quyết định nghỉ công việc văn phòng. Mình sắp tròn 22, tạm thời nghỉ việc, trôi dạt vô thường tìm kiếm nhân dạng bản thân và ai đó yêu thương. Mình buồn như hạt gạo vỡ với những khung tranh cả lũ trẻ mới lớn chật vật học cách trưởng thành ở Tokyo. Vẫn những câu chuyện đấy. Mình mua một cây đàn stratocaster, mình chọn stratocaster vì Taneda. Mình bỏ việc như Meiko. Mình dành cả ngày không làm gì như Ngọt hát rồi lại rơi vào những cơn lo âu vì không làm gì. Những ngày cuối cùng đi làm mình hay trốn xuống một góc kín kín hút vài điếu Winston, nghe Sufjan Stevens hát, thỉnh thoảng có vài anh chị đồng nghiệp đi qua. Tự hỏi không biết họ nghĩ gì, họ có nghĩ gì không, hay họ cũng không quan tâm. Chị Hoa có nghĩ gì về mình và những cuộc nói chuyện chóng vánh nhạt nhẽo không. Mình không biết. Mình cứ ngồi nhẩn nha với chút khói bạc hà thơm thơm từ điếu thuốc và Sufjan hát “&lt;em&gt;In a veil of great surprises I wonder did you love me at all?&lt;/em&gt;”. Liệu có ai đó yêu mình vì mình là Quỳnh Anh không. Ai đó thực sự hiểu mình hơn mình nghĩ mình là đứa như thế nào. Mình lại nhớ khung tranh Taneda hỏi &lt;strong&gt;“Am I happy? Really? Really.”&lt;/strong&gt; và mình khóc ngon lành như Taneda khóc trên con đường về với Meiko.&lt;/p&gt;

&lt;p&gt;Ngày mai mình vẫn dậy, vẫn gặp bạn bè, vẫn nói chuyện với những người cần nói, vẫn tự nghĩ xem sẽ làm gì cho hết ngày. Sẽ không có ai đọc đâu. Và rồi mình cũng sẽ quên những câu chuyện này.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.cuartomundo.cl/wp-content/uploads/2015/03/solanin31.png&quot; /&gt;&lt;/p&gt;</content><summary type="html">I have no idea what to do with myself. And while I wait for my epiphany, I feel the toxins collecting in my body.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://fractionoffiction.files.wordpress.com/2015/06/solanin4.jpg" /></entry><entry><title type="html">Everything Stays</title><link href="/blog/Everything-Stakes/" rel="alternate" type="text/html" title="Everything Stays" /><published>2018-09-30T00:00:00+07:00</published><updated>2018-09-30T00:00:00+07:00</updated><id>/blog/Everything-Stakes</id><content type="html" xml:base="/blog/Everything-Stakes/">&lt;p&gt;Tối hôm nọ mình gặp lại Bluemato. Lúc được nghe “Chuyến tàu xanh” mình như vỡ ra nhiều mảnh vụn rơi lác đác trong đêm mùa thu ở Hồ Tây. &lt;em&gt;Khi đoàn tàu rời bến&lt;/em&gt; nghe mà buồn chết được. Mình vẫn bị ám ảnh bệnh hoạn với cái thứ tuổi trẻ mênh mông vô định này. Xong mình xem lại hành trình trưởng thành của Marceline trong Stakes, và mình nhận ra có người mất hơn một nghìn năm để trưởng thành còn mình mới chỉ đang mất có 21 năm lẻ thôi. Không sao cả. Chuyến tàu màu xanh vẫn đang chạy. Mình muốn viết gì đó dành cho những đứa đang “aimlessly drifting through jobs and love and shit they don’t really care about”. Và mấy tập của Stakes thì đỉnh quá đi nên mình sẽ viết về cả hai: Stakes và hành trình đi vào kiếp người của một đứa trẻ mắc kẹt.&lt;/p&gt;

&lt;p&gt;Stakes gồm 8 phần phim kể về hành trình trở lại cõi người của Marceline the Vampire Queen ở xứ Ooo. Với những đứa bị mắc kẹt và ám ảnh với tuổi trẻ thì Stakes giống như &lt;strong&gt;Bắt trẻ đồng xanh&lt;/strong&gt; phiên bản nhiều màu sắc và tiếng cười hơn vậy. Thằng cu Holden Caulfield và cái sự chống đối lại thế giới người lớn của nó từng làm mình phát điên lên và trở thành một biểu tượng nằm đâu đó trong cái thứ tuổi trẻ lòng vòng quanh một cái hồ ở Hà Nội của mình. Trong Stakes có Marceline, một đứa con gái bình thường (hoặc cũng không bình thường lắm) đi săn ma cà rồng và bị trở thành ma cà rồng ở tuổi 18 trong thế giới loài người bỏ lại. Mãi mãi tuổi 18 và trôi dạt ở xứ Ooo. Và ở tuổi 18 thì như bao đứa khác, mình và Marceline đều lấy sự giận dữ và nỗi buồn ra để chống lại cả thế giới và người lớn.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c2.staticflickr.com/2/1963/44096897935_18af593488_o.png&quot; /&gt;
&lt;br /&gt;
&lt;small&gt;Đứa nhóc lúc nào cũng bị bỏ lại và trôi dạt&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c2.staticflickr.com/2/1979/44959577852_31acf6b253_c.jpg&quot; /&gt;
&lt;br /&gt;
&lt;small&gt;Và giận dữ chống lại mọi thứ&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Hơn nghìn năm sau, mọi thứ xung quanh thay đổi, Marcy vẫn trôi dạt. Rồi Marceline nhận ra làm ma cà rồng ở tuổi 18 mãi cũng không hay ho lắm khi bạn bè xung quanh dần trưởng thành hết. Marceline quyết định từ bỏ nhân dạng ma cà rồng-một identity quan trọng của mình, trở thành con người. Không bất tử nữa, đồng nghĩa với việc có thể tiếp tục lớn lên, không còn vấn vương nỗi buồn của quá khứ. Tất cả chỉ bằng cách nhờ PB rút hết “độc chất ma cà rồng” trong người ra đổ vào một cái xô. Thế là hành trình đi vào kiếp người của Marceline bắt đầu như cách cu cậu Holden Caulfield từ đỉnh đồi trên trường Pencey tiến vào New York vậy. Đứa 18 tuổi nào cũng nghĩ chỉ bằng cách bỏ lại sau lưng một số sở thích cá nhân và đôi khi là cả nhân dạng tuổi trẻ của mình nữa là có thể lớn lên ngay được.&lt;/p&gt;

&lt;p&gt;Nhưng việc lớn lên thì phức tạp hơn những gì Marceline và mình nghĩ rất nhiều. Nỗi buồn lúc nào cũng ở đó. Và tất cả những đứa như Marceline và mình và Holden lại đều có xu hướng trách móc bản thân. Lúc nào cũng là tại mình. Lúc nào cũng là do mình. Giá như mình làm khác đi. Rất nhiều thứ như vậy. Tuổi trẻ đó. Nghĩ là chỉ bằng một ngày lớn lên là mọi vấn đề đều có thể được giải quyết và bản thân có thể làm gì cũng được. Trong Stakes có rất nhiều ẩn dụ về nỗi buồn và những vấn đề tâm lý Marceline gặp phải. Và để lớn lên Marceline phải học cách chấp nhận nó, chấp nhận nỗi buồn là một phần của cõi người để có thể trưởng thành, và bài học chấp nhận cần rất nhiều thời gian chứ không đơn thuần chỉ là bỏ lại nhân dạng.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c2.staticflickr.com/2/1928/44959578412_3a37d561f8_c.jpg&quot; /&gt;
&lt;br /&gt;
&lt;small&gt;Sau những buồn khổ thì tất cả những gì mà một đứa nhóc 18 tuổi làm là tìm cách chạy trốn khỏi chúng&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Gần cuối hành trình khám phá kiếp người của mình, Marceline chìm sâu vào vực thẳm hư vô của nỗi buồn dồn nén trong nghìn năm. Không ai giúp được bản thân mình ngoài chính mình những lúc đó cả. Nhưng có ai đó ở cạnh chỉ để nói rằng việc ở tận cùng đáy cũng không sao, hoàn toàn ổn, rằng chúng ta không một mình, đôi khi là cần thiết. Simon và Marceline, hai kẻ &lt;em&gt;đã-từng-là-người&lt;/em&gt; ở xứ Ooo giờ đây tự coi mình là con gián con chuột, rằng họ biết có thể cuối ngày họ sẽ không cứu được ai, nhưng họ vẫn sẽ đi được tới hết ngày đó. Và cuộc đối thoại giữa ông thầy Antolini và Holden lúc này trở nên có ý nghĩa hơn bao giờ hết&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tôi nghĩ rằng cái dốc mà chú đang lăn xuống là một thứ dốc khủng khiếp. Không bao giờ người xuống dốc được nghe hay cảm thấy mình chạm phải đáy hố. Họ cứ việc lăn xuống, lăn xuống. Cái dốc ấy dành cho những người, vào một lúc nào đó trong đời, đi tìm một cái gì mà hoàn cảnh và những người xung quanh không thể đem lại cho họ, hay họ nghĩ là không thể đem lại cho họ. Bởi thế họ bỏ cuộc, không thèm tìm kiếm nữa. Họ bỏ cuộc ngay cả trước khi họ thực sự bắt đầu.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://c2.staticflickr.com/2/1925/44289020774_e826ffaf1c_z.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Xuyên suốt Stakes là lời nhắc nhở về sự đổi thay. Bạn bảo mình là đứa lúc nào cũng có cảm giác bị bỏ lại, mọi người ai cũng phát triển còn mình vẫn ở đó, là do mình không chịu thay đổi. Mọi người chìa tay ra giúp đỡ mình, mình không thỏa hiệp và vẫn ở lại. Lỗi là do mình. Mình không có gì để bao biện với bạn. Trong truyện ngắn &lt;strong&gt;The Ocean Full of Bowling Balls&lt;/strong&gt;, nhóc Kenneth cũng bảo mọi vấn đề của thằng cu Holden đều do nó không chịu thỏa hiệp, không thỏa hiệp với người lớn, không thỏa hiệp với thay đổi. Để lớn lên bản thân vừa phải thay đổi vừa phải chấp nhận sự thay đổi của thế giới, nghe thật nặng nề. Hành trình đi vào kiếp người của Marceline bắt đầu với &lt;em&gt;Everything Stays&lt;/em&gt;, một bài hát mà Marceline được nghe từ mẹ của mình, và kết thúc cũng là &lt;em&gt;Everything Stays&lt;/em&gt; để khép lại hành trình. Marceline lại trở thành ma cà rồng, chấp nhận nhân dạng của bản thân và những nỗi buồn khổ mà nó đem lại. Marceline có trưởng thành sau hành trình mỏi mệt đó không, có và không. Marceline vẫn ở tuổi 18, vẫn là đứa nhóc đầy u buồn và có khiếu hài hước méo mó, nhưng đứa nhóc mắc kẹt đó cũng đang dần học cách chấp nhận bản thân, chấp nhận nỗi buồn, chấp nhận những thay đổi thay vì chạy trốn và đẩy mọi thứ đi xa để tự cô lập bản thân như một nghìn năm trước. Hành trình kết thúc, Marceline vẫn một mình cùng bài hát Everything Stays. Cho tới cuối ngày, ai cũng phải tự đối mặt với chính mình và nỗi cô đơn.&lt;/p&gt;

&lt;p&gt;Hành trình trưởng thành của Marceline vẫn còn kéo dài chừng nào xứ Ooo vẫn tồn tại đâu đó trong vũ trụ này, và cả hành trình của bản thân mình nữa. Mình hi vọng mình sẽ không phải mất hơn nghìn năm để trải nghiệm và lớn lên. Nhưng đồng thời mình mong rằng việc trưởng thành hay không chỉ là một sự lựa chọn và mình vẫn còn rất nhiều lựa chọn khác thay vì cứ lớn lên và già đi và nhìn bạn bè xung quanh cũng vậy.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img00.deviantart.net/c013/i/2015/325/a/4/everything_stays____but_it_still_changes__by_greatlordhelix-d9hkkan.jpg&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Being mortal was good, but at the same time, it was terrifying. Now I’m a vampire with fresh mortal memories and, I dunno, more empathy or something. More grown-up.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Trưởng thành đáng sợ như vậy đó, nhưng hành trình tìm kiếm nó thì ai cũng phải trải qua và tìm kiếm cho mình nhiều cảm xúc như những nhân vật của tuổi trẻ đã làm vậy. Marceline, Holden Caulfield, Punpun, mình, tất cả những đứa nhóc mắc kẹt và không thỏa hiệp, vẫn còn rất nhiều sự lựa chọn trong cõi người dành cho chúng mình và những gì bọn mình cần đôi khi chỉ là ai đó giúp đỡ trong hành trình tìm kiếm chúng.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://4.bp.blogspot.com/-jUnMHJxW4Xw/VSrcOPoVezI/AAAAAAAAA4U/QLhtLGbfV_Q/s1600/adventure%2Btime%2Bimage%2B4.JPG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Everything stays&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Right where you left it&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Everything stays&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;But it still changes&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ever so slightly&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Daily and nightly&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In little ways&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;When everything stays&lt;/em&gt;&lt;/p&gt;</content><summary type="html">Nhưng việc lớn lên thì phức tạp hơn những gì Marceline và mình nghĩ rất nhiều. Nỗi buồn lúc nào cũng ở đó</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://c2.staticflickr.com/2/1920/31135236368_816e8715e1_o.png" /></entry><entry><title type="html">Các qui tắc đặt tên trong CSS</title><link href="/blog/CSS-naming/" rel="alternate" type="text/html" title="Các qui tắc đặt tên trong CSS" /><published>2018-01-21T00:00:00+07:00</published><updated>2018-01-21T00:00:00+07:00</updated><id>/blog/CSS-naming</id><content type="html" xml:base="/blog/CSS-naming/">&lt;p&gt;Tôi đã nghe nhiều lập trình viên nói rằng họ ghét CSS. Bằng kinh nghiệm bản thân, tôi nghĩ những lời kêu gào đó chẳng qua chỉ là kết quả của việc không học CSS một cách cẩn thận.&lt;/p&gt;

&lt;p&gt;CSS không phải thứ “ngôn ngữ” đẹp nhất, nhưng nó thực sự đã hoàn thành tốt nhiệm vụ của mình là “tô điểm” cho web suốt 20 năm qua. Không quá tệ, đúng không?&lt;/p&gt;

&lt;p&gt;Tuy nhiên càng viết CSS nhiều bạn sẽ sớm nhận ra một khuyết điểm to lớn của nó.&lt;/p&gt;

&lt;p&gt;Rất khó để bảo trì những dòng code CSS.&lt;/p&gt;

&lt;p&gt;Những dòng code CSS bị viết một cách cẩu thả sẽ sớm trở thành cơn ác mộng khủng khiếp.&lt;/p&gt;

&lt;p&gt;Dưới đây là một vài quy tắc đặt tên cho CSS sẽ giúp bạn bớt stress một chút và thoát khỏi hàng tiếng đồng hồ chìm trong những dòng code.&lt;br /&gt;
&lt;img src=&quot;https://davidwalsh.name/demo/css-comic.jpg&quot; /&gt;
&lt;br /&gt;
&lt;small&gt;Bạn đã từng như thế này rồi đúng không?&lt;/small&gt;&lt;/p&gt;

&lt;h3 id=&quot;sử-dụng-gạch-ngang-giữa-các-từ&quot;&gt;Sử dụng gạch ngang giữa các từ&lt;/h3&gt;
&lt;p&gt;Nếu bạn đã viết Javascript, thì việc đặt tên biến theo kiểu “camelCase” khá thông dụng.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
var redBox = document.getElementById('...')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tuyệt, đúng không?&lt;/p&gt;

&lt;p&gt;Vấn đề là việc đặt tên như vậy không phù hợp với CSS cho lắm.&lt;/p&gt;

&lt;p&gt;Đừng làm như này:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
	&lt;strong&gt;.redBox&lt;/strong&gt; {
	  border: 1px solid red;
	}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thay vào đó hãy viết:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
	&lt;strong&gt;.red-box&lt;/strong&gt; {
	  border: 1px solid red;
	}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Đây là một chuẩn đặt tên khá phổ biến trong CSS. Nó cũng khá dễ đọc.&lt;/p&gt;

&lt;p&gt;Đồng thời việc đặt tên như vậy sẽ nhất quán hơn với tên các thuộc tính css&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
	&lt;em&gt;//Đúng&lt;/em&gt;
	.some-classe {
	  &lt;strong&gt;font-weight:&lt;/strong&gt; 10em;
	}
	//Sai
	.some-class {
	  &lt;strong&gt;fontWeight:&lt;/strong&gt; 10em;
	}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;chuẩn-đặt-tên-bem&quot;&gt;Chuẩn đặt tên BEM&lt;/h3&gt;

&lt;p&gt;Mỗi nhóm sẽ có những cách viết selectors của CSS khác nhau. Có nhóm sử dụng gạch nối, có nhóm sẽ thích sử dụng một chuẩn đặt tên quy củ hơn gọi là BEM.&lt;/p&gt;

&lt;p&gt;Nhìn chung, có 3 vấn đề chính mà các chuẩn đặt tên CSS sẽ cố gắng giải quyết:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Biết selectors có chức năng gì dựa vào tên của nó.&lt;/li&gt;
  &lt;li&gt;Biết selectors được dùng ở chỗ nào dựa vào tên của nó.&lt;/li&gt;
  &lt;li&gt;Biết mối quan hệ giữa các tên class dựa vào tên của chúng.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Bạn đã bao giờ nhìn thấy những tên class được viết thế này chưa:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  &lt;strong&gt;.nav--secondary &lt;/strong&gt;{
    ...
  }
  &lt;strong&gt;.nav__header &lt;/strong&gt;{
    ...
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Đó chính là chuẩn BEM.&lt;/p&gt;

&lt;h3 id=&quot;giải-thích-bem-cho-một-đứa-trẻ-5-tuổi&quot;&gt;Giải thích BEM cho một đứa trẻ 5 tuổi.&lt;/h3&gt;

&lt;p&gt;BEM cố gắng chia giao diện người dùng thành những mảnh nhỏ có thể tái sử dụng.&lt;/p&gt;

&lt;p&gt;Cùng xem hình vẽ dưới đây nhé:&lt;br /&gt;
&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*qFy4XIpxbWx4oaOA3TYqpQ.png&quot; /&gt;&lt;br /&gt;
&lt;small&gt;Đây là một bức ảnh tuyệt đỉnh của một tên người que.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Không, nó không được giải gì cả : (&lt;/p&gt;

&lt;p&gt;Người que đại diện cho một mảnh, giống như một khối thiết kế.&lt;/p&gt;

&lt;p&gt;Có lẽ tới lúc này bạn đã đoán ra B trong BEM đại diện cho “Block” (khối)&lt;/p&gt;

&lt;p&gt;Trong thực tế, một block có thể đại diện cho một thanh điều hướng, header, footer, hay các khối khác.&lt;/p&gt;

&lt;p&gt;Dựa theo ví dụ được giải thích ở trên, một tên class lý tưởng có thể được sử dụng cho thành phần “người que” trên sẽ là &lt;code class=&quot;highlighter-rouge&quot;&gt;stick-man&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Mảnh này sẽ được thiết kế lại như sau:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
	.stick-man {

	}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Chúng ta đã sử dụng gạch ngang ở đây!&lt;br /&gt;
&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*US1EoM_lvYOeJabGDhV2Eg.png&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;e-cho-elements-phần-tử&quot;&gt;E cho Elements (phần tử)&lt;/h3&gt;

&lt;p&gt;E trong BEM đại diện cho Elements&lt;/p&gt;

&lt;p&gt;Nhìn chung thì các khối hiếm khi được tạo thành một cách độc lập.&lt;/p&gt;

&lt;p&gt;Ví dụ, một tên người que phải có 1 cái &lt;code class=&quot;highlighter-rouge&quot;&gt;đầu&lt;/code&gt;, hai &lt;code class=&quot;highlighter-rouge&quot;&gt;cẳng tay&lt;/code&gt;, và một &lt;code class=&quot;highlighter-rouge&quot;&gt;đôi chân&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;đầu&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;tay&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;chân&lt;/code&gt; là những phần tử nhỏ trong một mảnh lớn. Chúng có thể được coi là những mảnh con hay là con của các phần tử cha mẹ.&lt;/p&gt;

&lt;p&gt;Sử dụng chuẩn đặt tên BEM, tên class của các phần tử con sẽ được ngăn cách bằng hai dấu gạch dưới, theo sau là tên phần tử đó.
Ví dụ&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
	.stick-man__head {

  }
	.stick-man__arms {

  }
	.stick-man__feet {

  }
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;m-cho-modifiers-bổ-nghĩa&quot;&gt;M cho Modifiers (bổ nghĩa)&lt;/h3&gt;

&lt;p&gt;M trong BEM là viết tắt của Modifiers
Nếu một tên người que bị thay đổi đi một chút và chúng ta sẽ có một tên người que &lt;code class=&quot;highlighter-rouge&quot;&gt;xanh&lt;/code&gt;, một tên người que &lt;code class=&quot;highlighter-rouge&quot;&gt;đỏ&lt;/code&gt; thì sao? &lt;br /&gt;
&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*Uj4IOaEtYynnUUJm_hAdwQ.png&quot; /&gt;
&lt;br /&gt;
Thực tế tình huống trên sẽ giống với việc chúng ta muốn có một button &lt;code class=&quot;highlighter-rouge&quot;&gt;đỏ&lt;/code&gt; (hoặc &lt;code class=&quot;highlighter-rouge&quot;&gt;xanh&lt;/code&gt; cũng được). Đây chính là trường hợp chúng ta sử dụng bổ nghĩa cho các thành phần.&lt;/p&gt;

&lt;p&gt;Sử dụng BEM, tên một class sử dụng bổ nghĩa sẽ được ngăn cách bởi hai gạch ngang, theo sau là tên phần tử.&lt;/p&gt;

&lt;p&gt;Ví dụ:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
	.stick-man--blue {

  }
	.stick-man--red {

  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ví dụ này chỉ biểu diễn cách một thành phần cha mẹ bị thay đổi. Trong thực tế không phải lúc nào chúng ta cũng chỉ làm việc với những thành phần này.&lt;/p&gt;

&lt;p&gt;Nếu chúng ta muốn mỗi tên người que lại có kích thước &lt;code class=&quot;highlighter-rouge&quot;&gt;đầu&lt;/code&gt; khác nhau thì sao?&lt;br /&gt;
&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*qTM1TfotfLSRNjZ_PnWtAg.png&quot; /&gt;
&lt;br /&gt;
Lần này những phần tử  (element) sẽ được thay đổi. Nhớ lại nào, những phần tử là những mảnh con nằm trong khối chứa chúng.&lt;/p&gt;

&lt;p&gt;Một &lt;code class=&quot;highlighter-rouge&quot;&gt;.stick-man&lt;/code&gt; đại diện cho &lt;code class=&quot;highlighter-rouge&quot;&gt;khối&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;.stick-man__head&lt;/code&gt; là phần tử.&lt;/p&gt;

&lt;p&gt;Giống ví dụ trên thì hai gạch ngang cũng có thể được sử dụng như sau:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
	&lt;strong&gt;.stick-man__head--smal&lt;/strong&gt; {

  }
	&lt;strong&gt;.stick-man__head--big&lt;/strong&gt; {

  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Một lần nữa hãy chú ý tới cách sử dụng hai &lt;strong&gt;gạch ngang&lt;/strong&gt; trong ví dụ trên. Nó thường thể hiện cho trường hợp bổ nghĩa.&lt;/p&gt;

&lt;p&gt;Tới lúc này có lẽ bạn đã nắm được cơ bản cách mà chuẩn đặt tên BEM hoạt động rồi đấy.&lt;/p&gt;

&lt;p&gt;Cá nhân tôi chỉ hay sử dụng một gạch ngang giữa các tên class cho những dự án đơn giản, BEM thì thường liên quan nhiều tới các dự án hướng tới giao diện người dùng hơn.&lt;/p&gt;

&lt;p&gt;Bạn có thể đọc thêm về BEM ở &lt;a href=&quot;ttp://getbem.com/naming&quot;&gt;đây&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;tại-sao-lại-sử-dụng-các-chuẩn-đặt-tên&quot;&gt;Tại sao lại sử dụng các chuẩn đặt tên?&lt;/h3&gt;

&lt;p&gt;&lt;i&gt;Có hai vấn đề rất khó giải quyết trong ngành khoa học máy tính: vô hiệu hóa cache và đặt tên cho mọi thứ - Phil Karlton &lt;/i&gt;&lt;/p&gt;

&lt;p&gt;Trong lập trình đặt tên là một việc khó khăn. Chúng ta cố gắng làm cho mọi thứ dễ dàng hơn, tiết kiệm thời gian hơn với những dòng code dễ bảo trì.&lt;/p&gt;

&lt;p&gt;Đặt tên chuẩn trong CSS sẽ giúp code bạn dễ đọc và bảo trì hơn.&lt;/p&gt;

&lt;p&gt;Nếu bạn chọn sử dụng chuẩn BEM, việc nhìn ra mối quan hệ giữa những thành phần trong thiết kế của bạn sẽ dễ dàng hơn, chỉ cần nhìn vào các selectors thôi là bạn đã hiểu rồi.&lt;/p&gt;

&lt;p&gt;Bạn đã đủ tự tin chưa?&lt;/p&gt;

&lt;h3 id=&quot;các-tên-trong-css-với-javascript-hooks&quot;&gt;Các tên trong CSS với Javascript Hooks*&lt;/h3&gt;

&lt;p&gt;Hôm nay là ngày làm việc đầu tiên của John.&lt;/p&gt;

&lt;p&gt;Anh ấy được đưa cho một đoạn code &lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt; như sau:&lt;/p&gt;
&lt;xmp&gt;
	&lt;div class=&quot;siteNavigation&quot;&gt;
	&lt;/div&gt;
&lt;/xmp&gt;

&lt;p&gt;John đã đọc bài viết này và nhận ra đây không phải đoạn code có tên class được đặt phù hợp trong &lt;code class=&quot;highlighter-rouge&quot;&gt;CSS&lt;/code&gt;. Vậy nên anh ta đã thay đổi lại đoạn code như sau:&lt;/p&gt;
&lt;xmp&gt;
	&lt;div class=&quot;site-navigation&quot;&gt;
	&lt;/div&gt;
&lt;/xmp&gt;

&lt;p&gt;Trông có vẻ ổn đúng không?&lt;/p&gt;

&lt;p&gt;Tuy nhiên John không biết rằng anh ta đã phá vỡ toàn bộ codebase.&lt;/p&gt;

&lt;p&gt;Thế quái nào vậy?&lt;/p&gt;

&lt;p&gt;Ở đâu đó trong những dòng code Javascript, có một đoạn sử dụng tới tên class &lt;code class=&quot;highlighter-rouge&quot;&gt;siteNavigation&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
//the Javasript code
const nav = document.querySelector('.siteNavigation')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Do đó khi thay đổi tên class, biến &lt;code class=&quot;highlighter-rouge&quot;&gt;nav&lt;/code&gt; đã bị &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Buồn ghê.&lt;/p&gt;

&lt;p&gt;Để tránh những trường hợp như này, các lập trình viên đã tìm ra những phương pháp khác nhau.&lt;/p&gt;

&lt;h4&gt;1. Dùng tên class `js-`&lt;/h4&gt;
&lt;p&gt;Một cách để tránh những lỗi như trên là dùng một tên class &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;js-*&lt;/code&gt;&lt;/strong&gt; để chỉ ra mối quan hệ với phần tử DOM.
Ví dụ:&lt;/p&gt;
&lt;xmp&gt;
&lt;div class=&quot;site-navigation js-site-navigation&quot;&gt;
&lt;/div&gt;
&lt;/xmp&gt;
&lt;p&gt;Và trong đoạn code Javascript:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
//the Javasript code
const nav = document.querySelector('.js-site-navigation')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Theo chuẩn đặt tên, khi nhìn thấy một tên class &lt;code class=&quot;highlighter-rouge&quot;&gt;js-site-navigation&lt;/code&gt;, mọi người sẽ hiểu có một mối quan hệ giữa phần tử DOM đó trong đoạn code Javascript.&lt;/p&gt;

&lt;h4&gt;2. Sử dụng Rel attribute&lt;/h4&gt;
&lt;p&gt;Tôi không hay sử dụng cách này lắm, nhưng tôi đã thấy có người dùng nó.&lt;/p&gt;

&lt;p&gt;Bạn có nhận ra đoạn code này không?&lt;/p&gt;
&lt;xmp&gt;
	&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;main.css&quot; /&gt;
&lt;/xmp&gt;
&lt;p&gt;Đơn giản thì một &lt;strong&gt;rel attribute&lt;/strong&gt; định nghĩa mối quan hệ giữa các tài nguyên được liên kết tới đoạn văn bản mà nó được gọi tới.&lt;/p&gt;

&lt;p&gt;Trong ví dụ trước với John, kĩ thuật này có thể được sử dụng như sau:&lt;/p&gt;
&lt;xmp&gt;
	&lt;div class=&quot;site-navigation&quot; rel=&quot;js-site-navigation&quot;&gt;
	&lt;/div&gt;
&lt;/xmp&gt;
&lt;p&gt;Và trong đọan code javascript:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
const nav = document.querySelector(&quot;[rel='js-site-navigation']&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tôi vẫn không tin tưởng vào kỹ thuật này lắm, nhưng bạn có thể sẽ tình cờ nhìn thấy nó trong vài codebase. Mấu chốt ý tưởng ở đây là, &lt;i&gt;”Ồ có một mối quan hệ của phần tử này với Javascript, tôi phải sử dụng rel attribute để thể hiện nó.”&lt;/i&gt;&lt;/p&gt;

&lt;p&gt;Web là một xứ sở rộng lớn với nhiều kĩ thuật khác nhau để giải quyết cùng một vấn đề mà.&lt;/p&gt;

&lt;h4&gt;3. Đừng dùng data attributes&lt;/h4&gt;
&lt;p&gt;Một vài lập trình viên sử dụng data attributes như một Javascript hooks. Điều này không đúng. Theo đúng định nghĩa, data attributes chỉ được dùng cho việc lưu trữ những dữ liệu tùy biến.&lt;br /&gt;
&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*wYSuEHKyr4gikmoEaq-9jw.png&quot; /&gt;
&lt;br /&gt;
&lt;small&gt;Các dùng data attributes tốt ở twitter&lt;/small&gt;&lt;/p&gt;
&lt;h3 id=&quot;mẹo-nhỏ-viết-nhiều-comments-cho-css-hơn&quot;&gt;Mẹo nhỏ: Viết nhiều comments cho CSS hơn.&lt;/h3&gt;

&lt;p&gt;Việc này không liên quan gì tới chuẩn đặt tên cả, nhưng nó cũng sẽ giúp bạn tiết kiệm thời gian.&lt;/p&gt;

&lt;p&gt;Trong khi rất nhiều lập trình viên cố gắng không viết comment cho JavaScript hoặc chỉ viết rất ít, thì trong CSS tôi nghĩ bạn nên viết nhiều comments hơn.&lt;/p&gt;

&lt;p&gt;Vì CSS không phải “ngôn ngữ” đẹp nhất, những comments có cấu trúc tốt sẽ giúp bạn tiết kiệm nhiều thời gian hơn khi bạn phải cố hiểu nó.&lt;/p&gt;

&lt;p&gt;Việc này không gây ảnh hưởng gì đâu.&lt;/p&gt;

&lt;p&gt;Cứ thử đọc xem &lt;a href=&quot;https://github.com/twbs/bootstrap/blob/v4-dev/scss/_carousel.scss&quot;&gt;source code&lt;/a&gt; của Bootstrap đã được comment cẩn thận thế nào đi.&lt;/p&gt;

&lt;p&gt;Bạn không phải viết comments cho dòng &lt;code class=&quot;highlighter-rouge&quot;&gt;color: red&lt;/code&gt; chỉ để nói rằng nó sẽ cho ra một màu đỏ. Nhưng nếu bạn viết những kĩ thuật CSS khác không được tường minh cho lắm, hãy viết comment.&lt;/p&gt;

&lt;h3 id=&quot;đã-sẵn-sàng-lên-mức-chuyên-nghiệp-chưa&quot;&gt;Đã sẵn sàng lên mức chuyên nghiệp chưa?&lt;/h3&gt;

&lt;p&gt;Tôi có tạo một bài hướng dẫn CSS miễn phí để giúp bạn mài giũa kĩ năng CSS của mình.
Lấy cuốn tài liệu đó ở &lt;a href=&quot;https://ohansemmanuel.us17.list-manage.com/subscribe?u=6fa63587721dce8a5eb987a2a&amp;amp;id=ba27bc2a77&quot;&gt; đây&lt;/a&gt;.&lt;br /&gt;
&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*fJabzNuhWcJVUXa3O5OlSQ.png&quot; /&gt;
&lt;br /&gt;
&lt;small&gt;7 mẹo CSS bạn chưa biết&lt;/small&gt;&lt;/p&gt;
&lt;blockquote&gt;
tài liệu: https://medium.freecodecamp.org/css-naming-conventions-that-will-save-you-hours-of-debugging-35cea737d849
&lt;/blockquote&gt;</content><summary type="html">Vẫn là bài dịch từ FreeCodeCamp medium</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://cdn-images-1.medium.com/max/1000/1*YunI3ChUVMlpmFzo75FczQ.png" /></entry><entry><title type="html">My very first post</title><link href="/blog/Hello-World/" rel="alternate" type="text/html" title="My very first post" /><published>2018-01-14T00:00:00+07:00</published><updated>2018-01-14T00:00:00+07:00</updated><id>/blog/Hello-World</id><content type="html" xml:base="/blog/Hello-World/">&lt;p&gt;So I decide to create this post. Special thanks to Github, Jekyll, Massively, and Stackoverflow now I can do some self-promotion shamelessly!&lt;/p&gt;</content><summary type="html">I don't know what to do with my life help</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/images/post1.jpg" /></entry></feed>
